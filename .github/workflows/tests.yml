name: tests
on: [push]
jobs:
  # Make data lists available across jobs for use in matrix.
  matrix:
    runs-on: ubuntu-latest
    outputs:
      deployments: ${{ steps.set-deployments.outputs.json }}
      services: ${{ steps.set-services.outputs.json }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - id: set-deployments
        name: Read deployments into matrix
        uses: ./.github/actions/set-json-output
        with:
          filename: .github/data/deployments.json
      - id: set-services
        name: Read services into matrix
        uses: ./.github/actions/set-json-output
        with:
          filename: .github/data/services.json

  # Test that the dockerfiles work when building all containers simultaneously.
  test-all-dockerfiles:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Build all development containers
        run: ./scripts/build.sh development

  # Test that the kubernetes deployments actually work.
  test-kubernetes-configuration:
    runs-on: ubuntu-latest
    needs: [ matrix ]
    strategy:
      matrix:
        deployment: ${{ fromJson(needs.matrix.outputs.deployments) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb
          sudo dpkg -i minikube_latest_amd64.deb
          minikube start
      - name: Spin up the deployment
        run: ./scripts/deploy.sh ${{ matrix.deployment }}

  # Execute all tests for all services individually.
  test-all-services:
    runs-on: ubuntu-latest
    needs: [ matrix ]
    strategy:
      matrix:
        service: ${{ fromJson(needs.matrix.outputs.services) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Execute the container test
        run: ./scripts/test.sh ${{ matrix.service.gate }} ${{ matrix.service.service }}
      - name: Upload coverage to codecov
        if: ${{ always() }}
        uses: codecov/codecov-action@v2
        with:
          flags: integration
          fail_ci_if_error: true
          directory: /temp
