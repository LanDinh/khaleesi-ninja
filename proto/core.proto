syntax = "proto3";

package khaleesi.core;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";


message User {
  enum UserType {
    // Non human.
    UNKNOWN       = 0;
    SYSTEM        = 1;

    // Human.
    ANONYMOUS     = 10;
    AUTHENTICATED = 11;
    PRIVILEGED    = 12;
  }

  string   id   = 1;
  UserType type = 2;
}

message GrpcCallerDetails {
  string backgate_request_id = 1;
  string request_id          = 2;
  string khaleesi_gate       = 3;
  string khaleesi_service    = 4;
  string grpc_service        = 5;
  string grpc_method         = 6;
  string pod_id              = 7;
}

message RequestMetadata {
  GrpcCallerDetails         caller              = 2;
  User                      user                = 3;
  google.protobuf.Timestamp timestamp           = 4;
}

message JobExecutionMetadata {
  string job_id       = 1;
  int64  execution_id = 2;
}

message JobActionConfiguration {
  google.protobuf.Duration timelimit  = 1;
  int64                    batch_size = 2;
}

message JobCleanupActionConfiguration {
  bool                     is_cleanup_job = 1;
  google.protobuf.Duration cleanup_delay  = 2;
}

message JobRequest {
  RequestMetadata               request_metadata      = 1;
  JobExecutionMetadata          job                   = 2;
  JobActionConfiguration        action_configuration  = 3;
  JobCleanupActionConfiguration cleanup_configuration = 4;
}

message JobExecutionResponse {
  enum Status {
    // Only for pulling the status.
    UNKNOWN     = 0;
    IN_PROGRESS = 1;

    // For pushing the status.
    SUCCESS = 2;
    TIMEOUT = 10;
    ABORT   = 11;
    ERROR   = 12;
    SKIPPED = 13;
  }

  RequestMetadata           request_metadata   = 1;
  JobExecutionMetadata      execution_metadata = 2;
  Status                    status             = 10;
  google.protobuf.Timestamp end                = 11;
  int64                     items_processed    = 12;
  int64                     total_items        = 13;
  string                    details            = 14;
}

message EmptyResponse {}

message EmptyRequest {
  RequestMetadata request_metadata = 1;
}

message IdMessage {
  string id = 1;
}

message IdRequest {
  RequestMetadata request_metadata = 1;
  IdMessage       id_message       = 10;
}


service Maid {
  rpc AbortBatchJob     (IdRequest)    returns (EmptyResponse);
  rpc AbortAllBatchJobs (EmptyRequest) returns (EmptyResponse);
}
