syntax = "proto3";

package khaleesi.core;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";


message User {
  enum UserType {
    // Non human.
    UNKNOWN = 0;
    SYSTEM  = 1;

    // Human.
    ANONYMOUS     = 10;
    AUTHENTICATED = 11;
    PRIVILEGED    = 12;
  }

  string   id   = 1;
  UserType type = 2;
}

message GrpcCallerDetails {
  string httpRequestId   = 1;
  string grpcRequestId   = 2;
  string khaleesiGate    = 3;
  string khaleesiService = 4;
  string grpcService     = 5;
  string grpcMethod      = 6;
  string podId           = 7;
}

message RequestMetadata {
  GrpcCallerDetails         caller    = 1;
  User                      user      = 2;
  google.protobuf.Timestamp timestamp = 3;
}

message JobExecutionMetadata {
  string jobId       = 1;
  int64  executionId = 2;
}

message ObjectMetadata {
  string id      = 1;
  int64  version = 2;
  google.protobuf.Timestamp created  = 3;
  google.protobuf.Timestamp modified = 4;
}

message JobActionConfiguration {
  google.protobuf.Duration timelimit = 1;
  int64                    batchSize = 2;
}

message JobCleanupActionConfiguration {
  bool                     isCleanupJob = 1;
  google.protobuf.Duration cleanupDelay = 2;
}

message JobRequest {
  RequestMetadata               requestMetadata      = 1;
  JobExecutionMetadata          job                  = 2;
  JobActionConfiguration        actionConfiguration  = 3;
  JobCleanupActionConfiguration cleanupConfiguration = 4;
}

message JobExecutionResponse {
  enum Status {
    // Only for pulling the status.
    UNKNOWN     = 0;
    IN_PROGRESS = 1;

    // For pushing the status.
    SUCCESS = 2;
    TIMEOUT = 10;
    ABORT   = 11;
    ERROR   = 12;
    SKIPPED = 13;
  }

  RequestMetadata           requestMetadata   = 1;
  JobExecutionMetadata      executionMetadata = 2;

  Status                    status          = 10;
  google.protobuf.Timestamp end             = 11;
  int64                     itemsProcessed = 12;
  int64                     totalItems     = 13;
  string                    details         = 14;
}

message EmptyResponse {}

message EmptyRequest {
  RequestMetadata requestMetadata = 1;
}

message IdMessage {
  string id = 1;
}

message IdRequest {
  RequestMetadata requestMetadata = 1;
  IdMessage       idMessage       = 2;
}


service Maid {
  rpc AbortBatchJob     (IdRequest)    returns (EmptyResponse);
  rpc AbortAllBatchJobs (EmptyRequest) returns (EmptyResponse);
}
