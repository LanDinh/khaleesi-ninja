syntax = "proto3";

package khaleesi.core.sawmill;

import "google/protobuf/timestamp.proto";
import "core.proto";


message ResponseMetadata {
  google.protobuf.Timestamp logged_timestamp = 1;
  string                    errors           = 2;
}


message Event {

  message Target {
    string             type  = 1;
    int64              id    = 2;
    khaleesi.core.User owner = 3;
  }

  message Action {
    enum ActionType {
      // Special.
      UNKNOWN_ACTION = 0;
      CUSTOM         = 1;

      // CRUD.
      CREATE         = 10;
      READ           = 11;
      UPDATE         = 12;
      DELETE         = 13;

      // Processes.
      START          = 20;
      END            = 21;
    }

    enum ResultType {
      UNKNOWN_RESULT = 0;
      SUCCESS        = 1;
      WARNING        = 2;
      ERROR          = 3;
      FATAL          = 4;
    }

    ActionType crud_type   = 1;
    string     custom_type = 2;
    ResultType result      = 3;
    string     details     = 4;
  }

  khaleesi.core.RequestMetadata request_metadata = 1;
  Target                        target           = 2;
  Action                        action           = 3;
}


message Request {
  khaleesi.core.RequestMetadata   request_metadata = 1;
  khaleesi.core.GrpcCallerDetails upstream_request = 2;
}

message LogRequestResponse {
  int64 request_id = 1;
}

message Response {
  string                    status     = 2;
  google.protobuf.Timestamp timestamp  = 3;
}

message ResponseRequest {
  int64 request_id  = 1;
  Response response = 2;
}


message LogStandardResponse {}

service Lumberjack {
  rpc LogEvent    (Event)           returns  (LogStandardResponse);
  rpc LogRequest  (Request)         returns  (LogRequestResponse);
  rpc LogResponse (ResponseRequest) returns (LogStandardResponse);
}


message EventResponse {
  ResponseMetadata event_metadata = 1;
  Event            event          = 2;
}

message EventsList {
  repeated EventResponse events = 1;
}


message RequestResponse {
  ResponseMetadata request_metadata  = 1;
  Request          request           = 2;
  ResponseMetadata response_metadata = 3;
  Response         response          = 4;
}

message RequestList {
  repeated RequestResponse requests = 1;
}


message LogFilter {

}

service Sawyer {
  rpc GetEvents   (LogFilter) returns (EventsList);
  rpc GetRequests (LogFilter) returns (RequestList);
}
