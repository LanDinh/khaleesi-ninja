CREATE FUNCTION pg_temp.assert_permissions(appUser text, database text) RETURNS VOID AS $$
BEGIN
  EXECUTE FORMAT('DROP SCHEMA IF EXISTS public');
  EXECUTE FORMAT('CREATE SCHEMA IF NOT EXISTS khaleesi');

  EXECUTE FORMAT('GRANT CONNECT ON DATABASE %I TO %I', database, appUser);
  EXECUTE FORMAT('GRANT USAGE ON SCHEMA khaleesi TO %I', appUser);

  EXECUTE FORMAT('ALTER DEFAULT PRIVILEGES IN SCHEMA khaleesi GRANT SELECT ON TABLES TO %I', appUser);
  EXECUTE FORMAT('ALTER DEFAULT PRIVILEGES IN SCHEMA khaleesi GRANT INSERT ON TABLES TO %I', appUser);
  EXECUTE FORMAT('ALTER DEFAULT PRIVILEGES IN SCHEMA khaleesi GRANT UPDATE ON TABLES TO %I', appUser);
  EXECUTE FORMAT('ALTER DEFAULT PRIVILEGES IN SCHEMA khaleesi GRANT DELETE ON TABLES TO %I', appUser);
  EXECUTE FORMAT('ALTER DEFAULT PRIVILEGES IN SCHEMA khaleesi GRANT REFERENCES ON TABLES TO %I', appUser);
  EXECUTE FORMAT('ALTER DEFAULT PRIVILEGES IN SCHEMA khaleesi GRANT USAGE ON SEQUENCES TO %I', appUser);
END
$$ LANGUAGE plpgsql;


-- noinspection SyntaxError,SqlSignature
SELECT pg_temp.assert_permissions(:'appUser', :'database');
