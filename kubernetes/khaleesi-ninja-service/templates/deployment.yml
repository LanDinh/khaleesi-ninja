apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.gate.name }}-{{ .Values.service.name }}-deployment
  namespace: khaleesi-ninja-{{ .Values.environment.name }}
  labels:
    khaleesi-ninja: service
    gate: {{ .Values.gate.name }}
    name: {{ .Values.service.name }}
    type: {{ .Values.type.name }}
spec:
  replicas: {{ .Values.service.replicas }}
  selector:
    matchLabels:
      khaleesi-ninja: service
      gate: {{ .Values.gate.name }}
      name: {{ .Values.service.name }}
      type: {{ .Values.type.name }}
  template:
    metadata:
      labels:
        khaleesi-ninja: service
        gate: {{ .Values.gate.name }}
        name: {{ .Values.service.name }}
        type: {{ .Values.type.name }}
    spec:
      containers:
        - name: deployment
          image: khaleesi-ninja/{{ .Values.gate.name }}/{{ .Values.service.name }}:{{ .Values.service.version }}
          imagePullPolicy: {{ .Values.service.image_pull_policy }}
          ports:
            - name: deployment
              containerPort: 8000
          {{- if or .Values.django.enabled .Values.kubegres.enabled }}
          env:
          {{- end }}
          {{- if .Values.django.enabled }}
            - name: KHALEESI_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.gate.name }}-{{ .Values.service.name }}-django-credentials
                  key: secretKey
          {{- end }}
          {{- if .Values.kubegres.enabled }}
            - name: KHALEESI_DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.gate.name }}-kubegres-configuration
                  key: host
            - name: KHALEESI_DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.gate.name }}-kubegres-configuration
                  key: port
            - name: KHALEESI_DATABASE_SUPERUSER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.gate.name }}-kubegres-configuration
                  key: superUser
          {{- end }}
      {{- if .Values.grpc_web.enabled }}
        - name: grpc-web-envoy
          image: envoyproxy/envoy-alpine:{{ .Values.grpc_web.envoy_version }}
          imagePullPolicy: Always
          ports:
            - name: grpc-web-envoy
              containerPort: 8010
          volumeMounts:
            - name: grpc-web-envoy-config
              readOnly: true
              mountPath: /config
          args: [ "envoy", "--config-path", "/config/envoy.yml" ]
      volumes:
        - name: grpc-web-envoy-config
          configMap:
            name: grpc-web-envoy-configuration
      {{- end }}
