{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "properties": {
    "environment": {
      "description": "environment-specific configuration",
      "type": "object",
      "properties": {
        "name": {
          "description": "the name of the environment",
          "type": "string"
        },
        "domain": {
          "description": "the domain to use",
          "type": "string"
        }
      },
      "required": [
        "name",
        "domain"
      ]
    },
    "gate": {
      "description": "gate configuration",
      "type": "object",
      "properties": {
        "name": {
          "description": "the name of the gate",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "service": {
      "description": "service configuration",
      "type": "object",
      "properties": {
        "name": {
          "description": "the name of the service",
          "type": "string"
        },
        "version": {
          "description": "the version to deploy in production",
          "type": "string"
        },
        "replicas": {
          "description": "the number of replicas required in production",
          "type": "integer"
        },
        "image_pull_policy": {
          "description": "whether or not to pull for an image or expect it locally",
          "type": "string"
        }
      },
      "required": [
        "name",
        "version",
        "replicas",
        "image_pull_policy"
      ]
    },
    "type": {
      "description": "type configuration",
      "type": "object",
      "properties": {
        "name": {
          "description": "the name of the service type",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "ingress": {
      "description": "ingress configuration for services exposed to the internet",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "whether or not this service requires exposure through the ingress",
          "type": "boolean"
        },
        "path": {
          "description": "the path pointing to the service",
          "type": "string"
        },
        "regex_path": {
          "description": "Whether or not the path requires regex parsing",
          "type": "boolean"
        },
        "port": {
          "description": "the named port the ingress should access for requests",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "path",
        "regex_path",
        "port"
      ]
    },
    "kubegres": {
      "description": "kubgres configuration",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "whether or not a service uses kubegres",
          "type": "boolean"
        },
        "replicas": {
          "description": "number of replicas for the postgres cluster",
          "type": "integer"
        },
        "size": {
          "description": "space available to the database",
          "type": "string"
        },
        "image": {
          "description": "the postgres image to use for the postgres cluster",
          "type": "string"
        },
        "port": {
          "description": "the port to run postgres in",
          "type": "integer"
        }
      },
      "required": [
        "enabled",
        "replicas",
        "size",
        "image",
        "port"
      ]
    },
    "django": {
      "description": "django configuration",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "whether or not this service uses django",
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ]
    },
    "probe": {
      "description": "kubernetes probe configuration",
      "type": "object",
      "properties": {
        "http": {
          "description": "kubernetes http probe configuration",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "whether to use http probes",
              "type": "boolean"
            },
            "readiness": {
              "description": "path for the readiness probe",
              "type": "string"
            },
            "liveness": {
              "description": "path for the liveness probe",
              "type": "string"
            },
            "startup": {
              "description": "path for the startup probe",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "readiness",
            "liveness",
            "startup"
          ]
        },
        "grpc": {
          "description": "kubernetes grpc probe configuration",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "whether to use grpc probes",
              "type": "boolean"
            }
          },
          "required": [
            "enabled"
          ]
        }
      },
      "required": [
        "http"
      ]
    },
    "grpc_web": {
      "description": "grpc-web configuration for gRPC services accessed by browser clients",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "whether or not this service requires a grpc-web proxy",
          "type": "boolean"
        },
        "envoy_version": {
          "description": "the version to use for the proxy",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "envoy_version"
      ]
    },
    "grpcui": {
      "description": "grpcui configuration for gRPC services",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "whether or not this service requires exposure through grpcui",
          "type": "boolean"
        },
        "version": {
          "description": "the grpcui version to use",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "version"
      ]
    }
  },
  "required": [
    "environment",
    "gate",
    "service",
    "type",
    "ingress",
    "kubegres",
    "django",
    "probe",
    "nginx_prometheus_exporter",
    "grpc_web",
    "grpcui"
  ],
  "title": "Values",
  "type": "object"
}
